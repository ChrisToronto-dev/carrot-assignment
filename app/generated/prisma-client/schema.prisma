// Define database connection via the `DATABASE_URL` env var
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define custom output path for generated Prisma Client
generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma-client"
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  email      String?   @unique
  password   String?
  bio        String?   @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  tweets     Tweet[]
  likes      Like[]
  comments   Comment[]
}

model Tweet {
  id         Int       @id @default(autoincrement())
  tweet      String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  likes      Like[]
  comments   Comment[]
}

model Like {
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet   Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  userId  Int
  tweetId Int

  @@id(name: "id", [userId, tweetId])
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
  tweet   Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int
}
